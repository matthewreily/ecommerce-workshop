# Docker compose file which uses build context plus mounted volumes for easier local development
# Note: storefront-fixed cannot use the build context because the .patch files are located in a parent directory of the Dockerfile
version: '3'
services:
  agent:
    image: "datadog/agent:latest"
    environment:
      - DD_API_KEY
      - DD_PROFILING_ENABLED=true
      - DD_PROFILING_EXPERIMENTAL_TIMELINE_ENABLED=true
      - DD_SITE=us5.datadoghq.com
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS=env:development,git.repository_url:github.com/matthewreily/ecommerce-workshop,git.commit.sha:${DD_GIT_COMMIT_SHA}
      - DD_VERSION
      - DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED='true'
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /sys/kernel/debug:/sys/kernel/debug
      - /lib/modules:/lib/modules
      - /usr/src:/usr/src
      - /var/tmp/datadog-agent/system-probe/build:/var/tmp/datadog-agent/system-probe/build
      - /var/tmp/datadog-agent/system-probe/kernel-headers:/var/tmp/datadog-agent/system-probe/kernel-headers
      - /etc/apt:/host/etc/apt
      - /etc/yum.repos.d:/host/etc/yum.repos.d
      - /etc/zypp:/host/etc/zypp
      - /etc/pki:/host/etc/pki
      - /etc/yum/vars:/host/etc/yum/vars
      - /etc/dnf/vars:/host/etc/dnf/vars
      - /etc/rhsm:/host/etc/rhsm
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
      - IPC_LOCK
      - CHOWN
    security_opt:
      - apparmor:unconfined
    labels:
      com.datadoghq.ad.logs: '[{"source": "agent", "service": "agent"}]'
  discounts:
    environment:
      - FLASK_APP=discounts.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST=db
      - DD_SERVICE=discounts-service
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - DD_TAGS=env:development,git.repository_url:github.com/matthewreily/ecommerce-workshop,git.commit.sha:${DD_GIT_COMMIT_SHA}
      - DD_VERSION
    image: public.ecr.aws/x2b9z2t7/ddtraining/discounts-fixed:latest
    command: flask run --port=${DISCOUNTS_PORT} --host=0.0.0.0 # If using any other port besides the default 8282, overriding the CMD is required
    volumes:
      - "../../discounts-service-fixed:/app"
    ports:
      - "${DISCOUNTS_PORT}:${DISCOUNTS_PORT}"
      - "22"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "discounts-service"}]'
      my.custom.label.team: "discount"
  frontend:
    environment:
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_SERVICE=store-frontend
      - DB_USERNAME
      - DB_PASSWORD
      - DD_CLIENT_TOKEN
      - DD_APPLICATION_ID
      - DD_ENV=development
      - DD_SITE=datadoghq.com
      - RAILS_HIDE_STACKTRACE=true
      - ADS_PORT=${ADS_PORT}
      - DISCOUNTS_PORT=${DISCOUNTS_PORT}
      - ADS_ROUTE=${ADS_ROUTE}
      - DISCOUNTS_ROUTE=${DISCOUNTS_ROUTE}
      - DD_TAGS=env:development,git.repository_url:github.com/matthewreily/ecommerce-workshop,git.commit.sha:${DD_GIT_COMMIT_SHA}
      - DD_VERSION
    image: public.ecr.aws/x2b9z2t7/ddtraining/storefront:latest
    volumes:
      - "../../store-frontend/src/store-frontend-broken-instrumented:/app"
    ports:
      - "3000:3000"
    depends_on:
      - agent
      - db
      - discounts
      - advertisements
    labels:
      com.datadoghq.ad.logs: '[{"source": "ruby", "service": "store-frontend"}]'
      my.custom.label.team: "frontend"
  advertisements:
    environment:
      - FLASK_APP=ads.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST=db
      - DD_SERVICE=advertisements-service
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - DD_TAGS=env:development,git.repository_url:github.com/matthewreily/ecommerce-workshop,git.commit.sha:${DD_GIT_COMMIT_SHA}
      - DD_VERSION
    image: public.ecr.aws/x2b9z2t7/ddtraining/advertisements-fixed:latest
    command: flask run --port=${ADS_PORT} --host=0.0.0.0 # If using any other port besides the default 9292, overriding the CMD is required
    volumes:
      - "../../ads-service-fixed:/app"
    ports:
      - "${ADS_PORT}:${ADS_PORT}"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "ads-service"}]'
      my.custom.label.team: "advertisements"
  db:
    image: postgres:11-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    labels:
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "postgres"}]'
  nginx:
    restart: always
    image: public.ecr.aws/x2b9z2t7/ddtraining/nginx:latest
    ports:
      - "80:80"
    depends_on:
      - frontend
    labels:
      com.datadoghq.ad.logs: '[{"source": "nginx", "service": "nginx"}]'
